#include<stdio.h>
#include<pthread.h>
#include<stdlib.h>
#include<unistd.h>
#include<sys/ipc.h>
#include<sys/sem.h>
#include<semaphore.h>
#define SUMSIZE 100
#define BUFSIZE 8

/**************modificar para 3 productores en un mismo buffer****************/


int buffer[BUFSIZE];
sem_t llenos;
sem_t vacios;

static void *productor(void *arg1)
{
	int i, entra, producir;
	entra=0;

	for (i=1;i<=SUMSIZE;i++)
	{
		while((producir = getchar())=='\n');
		sem_wait(&vacios);
		//semaforo mutex
			buffer[entra] = producir;
			entra = (entra + 1) % BUFSIZE;
		//--------
		printf("-->\t %c\n",producir);
		sem_post(&llenos);
	}
	return NULL;
}


static void *consumidor(void *arg2)
{
	int i, sale, consumir;
	sale=0;
	for(i=1;i<=SUMSIZE;i++){
	sleep(1); // el consumo se demora 1 segundo 
	sem_wait(&llenos);
	consumir = buffer[sale];
	sale = (sale + 1) % BUFSIZE;
	printf("t %c\t-->\n", consumir);
	sem_post(&vacios);
	}
	return NULL;
}
main()
{
	
	pthread_t prodtid1,prodtid2,prodtid3;//hilo productor
	pthread_t constid;


	sem_init(&llenos,0, 0);
	sem_init(&vacios,0, BUFSIZE);
	pthread_create(&prodtid1, NULL, productor, 1);
	pthread_create(&prodtid2, NULL, productor, 2);
	pthread_create(&prodtid3, NULL, productor, 3);
	/******/
	pthread_create(&constid, NULL, consumidor, NULL);
	
	pthread_join(prodtid1, NULL);
	pthread_join(prodtid2, NULL);
	pthread_join(prodtid3, NULL);

	pthread_join(constid, NULL);
	printf("termidado\n");

}
